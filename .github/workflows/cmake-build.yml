name: C Thread Pool build

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  build:
    runs-on: ${{matrix.os}}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        cmake-version: ['3.18.4', '3.21.1']
        include:
          - os: ubuntu-latest
            compiler: gcc
          - os: ubuntu-latest
            compiler: clang
          - os: macos-latest
            compiler: clang
          - os: windows-latest
            compiler: msvc
            vs-version: "17.0"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up CMake
        uses: jwlawson/actions-setup-cmake@v1
        with:
          cmake-version: ${{ matrix.cmake-version }}

      - name: Install CUnit on Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libcunit1 libcunit1-doc libcunit1-dev

      - name: Set up MSBuild for Visual Studio 2022
        if: runner.os == 'Windows'
        uses: microsoft/setup-msbuild@v1
        with:
          vs-version: "17.0"

      - name: Verify MSBuild Version
        if: runner.os == 'Windows'
        run: msbuild -version

      - name: Create build directory
        run: mkdir -p build

      - name: Configure CMake project
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then \
            cmake -S . -B build -G "Visual Studio 17 2022"; \
          elif [[ "${{ matrix.compiler }}" == "gcc" ]]; then \
            cmake -S . -B build -DCMAKE_BUILD_TYPE=Debug -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++; \
          elif [[ "${{ matrix.compiler }}" == "clang" ]]; then \
            cmake -S . -B build -DCMAKE_BUILD_TYPE=Debug -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++; \
          fi

      - name: Build CMake project
        run: cmake --build build
